name: continuous deployment

on: 
  pull_request:
    branches:
    - develop
    - main
  push:
    branches:
    - main
  release:

jobs:

  # build docs for develop and main branches
  build-docs:
    runs-on: ubuntu-latest
    steps:
      # setup
      - name: checkout
        uses: actions/checkout@main
      - name: setup-python
        uses: actions/setup-python@main
      # update repo visualization for docs
      - name: repo-visualizer
        uses: githubocto/repo-visualizer@main
        with:
          output_file: docs/reference/apidoc/diagram.svg
          excluded_paths: ".github"
          commit_message: "update repo diagram [skip ci]"
      # install project, which is required for autodoc of code
      - name: install buildingmotif
        run: pip install .
      # install jupyter-book, which for some reason isn't available with poetry install
      - name: install jupyter book
        run: pip install jupyter-book
      # build docs, which are deployed by repo settings
      - name: build docs
        run: |
          jupyter-book config sphinx ./docs/
          sphinx-build ./docs/ _build/html -b html

  # deploy distribution if a new release and tag are created
  deploy-dist:
    needs: build-docs
    if: startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    steps:
      # setup
      - name: checkout
        uses: actions/checkout@main
      - name: setup-python
        uses: actions/setup-python@main
      # install poetry and build dist
      - name: install poetry
        run: pip install poetry
      - name: build dist
        run: poetry build
      - name: publish distribution to Test PyPI
        id: test-pypi
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
          skip_existing: true
      - name: publish distribution to PyPI
        if: steps.test-pypi.outcome == 'success'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
