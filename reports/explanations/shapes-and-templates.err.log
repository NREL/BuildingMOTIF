Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/nbclient/client.py", line 1269, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/nbclient/util.py", line 85, in wrapped
    return just_run(coro(*args, **kwargs))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/nbclient/util.py", line 60, in just_run
    return loop.run_until_complete(coro)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/asyncio/base_events.py", line 654, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/nbclient/client.py", line 707, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/nbclient/client.py", line 1025, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/nbclient/client.py", line 919, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from buildingmotif import BuildingMOTIF
from buildingmotif.dataclasses import Library

# in-memory instance
bm = BuildingMOTIF("sqlite://")

# load library
brick = Library.load(ontology_graph="https://github.com/BrickSchema/Brick/releases/download/nightly/Brick.ttl")
lib = Library.load(ontology_graph="myshapes.ttl")
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mSingletonNotInstantiatedException[0m         Traceback (most recent call last)
Cell [0;32mIn[2], line 8[0m
[1;32m      5[0m bm [38;5;241m=[39m BuildingMOTIF([38;5;124m"[39m[38;5;124msqlite://[39m[38;5;124m"[39m)
[1;32m      7[0m [38;5;66;03m# load library[39;00m
[0;32m----> 8[0m brick [38;5;241m=[39m [43mLibrary[49m[38;5;241;43m.[39;49m[43mload[49m[43m([49m[43montology_graph[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mhttps://github.com/BrickSchema/Brick/releases/download/nightly/Brick.ttl[39;49m[38;5;124;43m"[39;49m[43m)[49m
[1;32m      9[0m lib [38;5;241m=[39m Library[38;5;241m.[39mload(ontology_graph[38;5;241m=[39m[38;5;124m"[39m[38;5;124mmyshapes.ttl[39m[38;5;124m"[39m)

File [0;32m~/work/BuildingMOTIF/BuildingMOTIF/buildingmotif/dataclasses/library.py:192[0m, in [0;36mLibrary.load[0;34m(cls, db_id, ontology_graph, directory, name, overwrite, infer_templates, run_shacl_inference)[0m
[1;32m    188[0m         ontology_graph [38;5;241m=[39m rdflib[38;5;241m.[39mGraph()
[1;32m    189[0m         ontology_graph[38;5;241m.[39mparse(
[1;32m    190[0m             ontology_graph_path, [38;5;28mformat[39m[38;5;241m=[39mguess_format(ontology_graph_path)
[1;32m    191[0m         )
[0;32m--> 192[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mcls[39;49m[38;5;241;43m.[39;49m[43m_load_from_ontology[49m[43m([49m
[1;32m    193[0m [43m        [49m[43montology_graph[49m[43m,[49m
[1;32m    194[0m [43m        [49m[43moverwrite[49m[38;5;241;43m=[39;49m[43moverwrite[49m[43m,[49m
[1;32m    195[0m [43m        [49m[43minfer_templates[49m[38;5;241;43m=[39;49m[43minfer_templates[49m[43m,[49m
[1;32m    196[0m [43m        [49m[43mrun_shacl_inference[49m[38;5;241;43m=[39;49m[43mrun_shacl_inference[49m[43m,[49m
[1;32m    197[0m [43m    [49m[43m)[49m
[1;32m    198[0m [38;5;28;01melif[39;00m directory [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[1;32m    199[0m     [38;5;28;01mif[39;00m resource_exists([38;5;124m"[39m[38;5;124mbuildingmotif.libraries[39m[38;5;124m"[39m, directory):

File [0;32m~/work/BuildingMOTIF/BuildingMOTIF/buildingmotif/dataclasses/library.py:280[0m, in [0;36mLibrary._load_from_ontology[0;34m(cls, ontology, overwrite, infer_templates, run_shacl_inference)[0m
[1;32m    275[0m [38;5;66;03m# expand the ontology graph before we insert it into the database. This will ensure[39;00m
[1;32m    276[0m [38;5;66;03m# that the output of compiled models will not contain triples that really belong to[39;00m
[1;32m    277[0m [38;5;66;03m# the ontology[39;00m
[1;32m    278[0m [38;5;28;01mif[39;00m run_shacl_inference:
[1;32m    279[0m     ontology [38;5;241m=[39m shacl_inference(
[0;32m--> 280[0m         ontology, engine[38;5;241m=[39m[43mget_building_motif[49m[43m([49m[43m)[49m[38;5;241m.[39mshacl_engine
[1;32m    281[0m     )
[1;32m    283[0m lib [38;5;241m=[39m [38;5;28mcls[39m[38;5;241m.[39mcreate(ontology_name, overwrite[38;5;241m=[39moverwrite)
[1;32m    285[0m [38;5;28;01mif[39;00m infer_templates:
[1;32m    286[0m     [38;5;66;03m# infer shapes from any class/nodeshape candidates in the graph[39;00m

File [0;32m~/work/BuildingMOTIF/BuildingMOTIF/buildingmotif/building_motif/building_motif.py:152[0m, in [0;36mget_building_motif[0;34m()[0m
[1;32m    150[0m [38;5;28;01mif[39;00m [38;5;28mhasattr[39m(BuildingMOTIF, [38;5;124m"[39m[38;5;124minstance[39m[38;5;124m"[39m):
[1;32m    151[0m     [38;5;28;01mreturn[39;00m BuildingMOTIF[38;5;241m.[39minstance  [38;5;66;03m# type: ignore[39;00m
[0;32m--> 152[0m [38;5;28;01mraise[39;00m SingletonNotInstantiatedException

[0;31mSingletonNotInstantiatedException[0m: 
SingletonNotInstantiatedException: 

