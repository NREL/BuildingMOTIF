Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/nbclient/client.py", line 1269, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/nbclient/util.py", line 85, in wrapped
    return just_run(coro(*args, **kwargs))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/nbclient/util.py", line 60, in just_run
    return loop.run_until_complete(coro)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/asyncio/base_events.py", line 654, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/nbclient/client.py", line 707, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/nbclient/client.py", line 1025, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/nbclient/client.py", line 919, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from rdflib import Namespace, URIRef
from buildingmotif import BuildingMOTIF
from buildingmotif.dataclasses import Model, Library, Template
from buildingmotif.namespaces import BRICK, RDF # import this to make writing URIs easier

# in-memory instance
bm = BuildingMOTIF("sqlite://")

# create the namespace for the building
BLDG = Namespace('urn:bldg/')

# create the building model
model = Model.create(BLDG, description="This is a test model for a simple building")

# load libraries included with the python package
constraints = Library.load(ontology_graph="constraints/constraints.ttl")

# load libraries excluded from the python package (available from the repository)
brick = Library.load(ontology_graph="../../libraries/brick/Brick-subset.ttl")
g36 = Library.load(directory="../../libraries/ashrae/guideline36")


# load tutorial 2 model and manifest
model.graph.parse("tutorial2_model.ttl", format="ttl")
manifest = Library.load(ontology_graph="tutorial2_manifest.ttl")

# assign the manifest to our model
model.update_manifest(manifest.get_shape_collection())
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mNoResultFound[0m                             Traceback (most recent call last)
File [0;32m~/work/BuildingMOTIF/BuildingMOTIF/buildingmotif/database/table_connection.py:243[0m, in [0;36mTableConnection.get_db_library_by_name[0;34m(self, name)[0m
[1;32m    242[0m [38;5;28;01mtry[39;00m:
[0;32m--> 243[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mbm[49m[38;5;241;43m.[39;49m[43msession[49m[38;5;241;43m.[39;49m[43mquery[49m[43m([49m[43mDBLibrary[49m[43m)[49m[38;5;241;43m.[39;49m[43mfilter[49m[43m([49m[43mDBLibrary[49m[38;5;241;43m.[39;49m[43mname[49m[43m [49m[38;5;241;43m==[39;49m[43m [49m[43mname[49m[43m)[49m[38;5;241;43m.[39;49m[43mone[49m[43m([49m[43m)[49m
[1;32m    244[0m [38;5;28;01mexcept[39;00m NoResultFound:

File [0;32m/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/sqlalchemy/orm/query.py:2870[0m, in [0;36mQuery.one[0;34m(self)[0m
[1;32m   2853[0m [38;5;250m[39m[38;5;124;03m"""Return exactly one result or raise an exception.[39;00m
[1;32m   2854[0m 
[1;32m   2855[0m [38;5;124;03mRaises ``sqlalchemy.orm.exc.NoResultFound`` if the query selects[39;00m
[0;32m   (...)[0m
[1;32m   2868[0m 
[1;32m   2869[0m [38;5;124;03m"""[39;00m
[0;32m-> 2870[0m [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_iter[49m[43m([49m[43m)[49m[38;5;241;43m.[39;49m[43mone[49m[43m([49m[43m)[49m

File [0;32m/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/sqlalchemy/engine/result.py:1522[0m, in [0;36mScalarResult.one[0;34m(self)[0m
[1;32m   1515[0m [38;5;250m[39m[38;5;124;03m"""Return exactly one object or raise an exception.[39;00m
[1;32m   1516[0m 
[1;32m   1517[0m [38;5;124;03mEquivalent to :meth:`_engine.Result.one` except that[39;00m
[0;32m   (...)[0m
[1;32m   1520[0m 
[1;32m   1521[0m [38;5;124;03m"""[39;00m
[0;32m-> 1522[0m [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_only_one_row[49m[43m([49m
[1;32m   1523[0m [43m    [49m[43mraise_for_second_row[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m[43m,[49m[43m [49m[43mraise_for_none[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m[43m,[49m[43m [49m[43mscalar[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m
[1;32m   1524[0m [43m[49m[43m)[49m

File [0;32m/opt/hostedtoolcache/Python/3.11.11/x64/lib/python3.11/site-packages/sqlalchemy/engine/result.py:562[0m, in [0;36mResultInternal._only_one_row[0;34m(self, raise_for_second_row, raise_for_none, scalar)[0m
[1;32m    561[0m [38;5;28;01mif[39;00m raise_for_none:
[0;32m--> 562[0m     [38;5;28;01mraise[39;00m exc[38;5;241m.[39mNoResultFound(
[1;32m    563[0m         [38;5;124m"[39m[38;5;124mNo row was found when one was required[39m[38;5;124m"[39m
[1;32m    564[0m     )
[1;32m    565[0m [38;5;28;01melse[39;00m:

[0;31mNoResultFound[0m: No row was found when one was required

During handling of the above exception, another exception occurred:

[0;31mLibraryNotFound[0m                           Traceback (most recent call last)
Cell [0;32mIn[1], line 20[0m
[1;32m     18[0m [38;5;66;03m# load libraries excluded from the python package (available from the repository)[39;00m
[1;32m     19[0m brick [38;5;241m=[39m Library[38;5;241m.[39mload(ontology_graph[38;5;241m=[39m[38;5;124m"[39m[38;5;124m../../libraries/brick/Brick-subset.ttl[39m[38;5;124m"[39m)
[0;32m---> 20[0m g36 [38;5;241m=[39m [43mLibrary[49m[38;5;241;43m.[39;49m[43mload[49m[43m([49m[43mdirectory[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43m../../libraries/ashrae/guideline36[39;49m[38;5;124;43m"[39;49m[43m)[49m
[1;32m     23[0m [38;5;66;03m# load tutorial 2 model and manifest[39;00m
[1;32m     24[0m model[38;5;241m.[39mgraph[38;5;241m.[39mparse([38;5;124m"[39m[38;5;124mtutorial2_model.ttl[39m[38;5;124m"[39m, [38;5;28mformat[39m[38;5;241m=[39m[38;5;124m"[39m[38;5;124mttl[39m[38;5;124m"[39m)

File [0;32m~/work/BuildingMOTIF/BuildingMOTIF/buildingmotif/dataclasses/library.py:208[0m, in [0;36mLibrary.load[0;34m(cls, db_id, ontology_graph, directory, name, overwrite, infer_templates, run_shacl_inference)[0m
[1;32m    206[0m     [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m src[38;5;241m.[39mexists():
[1;32m    207[0m         [38;5;28;01mraise[39;00m [38;5;167;01mException[39;00m([38;5;124mf[39m[38;5;124m"[39m[38;5;124mDirectory [39m[38;5;132;01m{[39;00msrc[38;5;132;01m}[39;00m[38;5;124m does not exist[39m[38;5;124m"[39m)
[0;32m--> 208[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mcls[39;49m[38;5;241;43m.[39;49m[43m_load_from_directory[49m[43m([49m
[1;32m    209[0m [43m        [49m[43msrc[49m[43m,[49m
[1;32m    210[0m [43m        [49m[43moverwrite[49m[38;5;241;43m=[39;49m[43moverwrite[49m[43m,[49m
[1;32m    211[0m [43m        [49m[43minfer_templates[49m[38;5;241;43m=[39;49m[43minfer_templates[49m[43m,[49m
[1;32m    212[0m [43m        [49m[43mrun_shacl_inference[49m[38;5;241;43m=[39;49m[43mrun_shacl_inference[49m[43m,[49m
[1;32m    213[0m [43m    [49m[43m)[49m
[1;32m    214[0m [38;5;28;01melif[39;00m name [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[1;32m    215[0m     bm [38;5;241m=[39m get_building_motif()

File [0;32m~/work/BuildingMOTIF/BuildingMOTIF/buildingmotif/dataclasses/library.py:417[0m, in [0;36mLibrary._load_from_directory[0;34m(cls, directory, overwrite, infer_templates, run_shacl_inference)[0m
[1;32m    415[0m     lib[38;5;241m.[39m_read_yml_file(file, template_id_lookup, dependency_cache)
[1;32m    416[0m [38;5;66;03m# now that we have all the templates, we can populate the dependencies[39;00m
[0;32m--> 417[0m [43mlib[49m[38;5;241;43m.[39;49m[43m_resolve_template_dependencies[49m[43m([49m[43mtemplate_id_lookup[49m[43m,[49m[43m [49m[43mdependency_cache[49m[43m)[49m
[1;32m    418[0m [38;5;66;03m# load shape collections from all ontology files in the directory[39;00m
[1;32m    419[0m lib[38;5;241m.[39m_load_shapes_from_directory(directory)

File [0;32m~/work/BuildingMOTIF/BuildingMOTIF/buildingmotif/dataclasses/library.py:520[0m, in [0;36mLibrary._resolve_template_dependencies[0;34m(self, template_id_lookup, dependency_cache)[0m
[1;32m    518[0m         [38;5;28;01mcontinue[39;00m
[1;32m    519[0m     [38;5;28;01mfor[39;00m dep [38;5;129;01min[39;00m dependency_cache[template[38;5;241m.[39mid]:
[0;32m--> 520[0m         [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_resolve_dependency[49m[43m([49m[43mtemplate[49m[43m,[49m[43m [49m[43mdep[49m[43m,[49m[43m [49m[43mtemplate_id_lookup[49m[43m)[49m
[1;32m    521[0m [38;5;66;03m# check that all dependencies are valid (use parameters that exist, etc)[39;00m
[1;32m    522[0m [38;5;28;01mfor[39;00m template [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39mget_templates():

File [0;32m~/work/BuildingMOTIF/BuildingMOTIF/buildingmotif/dataclasses/library.py:470[0m, in [0;36mLibrary._resolve_dependency[0;34m(self, template, dep, template_id_lookup)[0m
[1;32m    468[0m [38;5;66;03m# if dep is a _template_dependency, turn it into a template[39;00m
[1;32m    469[0m [38;5;28;01mif[39;00m [38;5;28misinstance[39m(dep, _template_dependency):
[0;32m--> 470[0m     dependee [38;5;241m=[39m [43mdep[49m[38;5;241;43m.[39;49m[43mto_template[49m[43m([49m[43mtemplate_id_lookup[49m[43m)[49m
[1;32m    471[0m     template[38;5;241m.[39madd_dependency(dependee, dep[38;5;241m.[39mbindings)
[1;32m    472[0m     [38;5;28;01mreturn[39;00m

File [0;32m~/work/BuildingMOTIF/BuildingMOTIF/buildingmotif/dataclasses/library.py:87[0m, in [0;36m_template_dependency.to_template[0;34m(self, id_lookup)[0m
[1;32m     84[0m     [38;5;28;01mreturn[39;00m Template[38;5;241m.[39mload(id_lookup[[38;5;28mself[39m[38;5;241m.[39mtemplate_name])
[1;32m     85[0m [38;5;66;03m# if not in the local cache, then search the database for the template[39;00m
[1;32m     86[0m [38;5;66;03m# within the given library[39;00m
[0;32m---> 87[0m library [38;5;241m=[39m [43mLibrary[49m[38;5;241;43m.[39;49m[43mload[49m[43m([49m[43mname[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mlibrary[49m[43m)[49m
[1;32m     88[0m [38;5;28;01mreturn[39;00m library[38;5;241m.[39mget_template_by_name([38;5;28mself[39m[38;5;241m.[39mtemplate_name)

File [0;32m~/work/BuildingMOTIF/BuildingMOTIF/buildingmotif/dataclasses/library.py:216[0m, in [0;36mLibrary.load[0;34m(cls, db_id, ontology_graph, directory, name, overwrite, infer_templates, run_shacl_inference)[0m
[1;32m    214[0m [38;5;28;01melif[39;00m name [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[1;32m    215[0m     bm [38;5;241m=[39m get_building_motif()
[0;32m--> 216[0m     db_library [38;5;241m=[39m [43mbm[49m[38;5;241;43m.[39;49m[43mtable_connection[49m[38;5;241;43m.[39;49m[43mget_db_library_by_name[49m[43m([49m[43mname[49m[43m)[49m
[1;32m    217[0m     [38;5;28;01mreturn[39;00m [38;5;28mcls[39m(_id[38;5;241m=[39mdb_library[38;5;241m.[39mid, _name[38;5;241m=[39mdb_library[38;5;241m.[39mname, _bm[38;5;241m=[39mbm)
[1;32m    218[0m [38;5;28;01melse[39;00m:

File [0;32m~/work/BuildingMOTIF/BuildingMOTIF/buildingmotif/database/table_connection.py:245[0m, in [0;36mTableConnection.get_db_library_by_name[0;34m(self, name)[0m
[1;32m    243[0m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39mbm[38;5;241m.[39msession[38;5;241m.[39mquery(DBLibrary)[38;5;241m.[39mfilter(DBLibrary[38;5;241m.[39mname [38;5;241m==[39m name)[38;5;241m.[39mone()
[1;32m    244[0m [38;5;28;01mexcept[39;00m NoResultFound:
[0;32m--> 245[0m     [38;5;28;01mraise[39;00m LibraryNotFound(name[38;5;241m=[39mname)

[0;31mLibraryNotFound[0m: Name: https://brickschema.org/schema/1.4/Brick
LibraryNotFound: Name: https://brickschema.org/schema/1.4/Brick

