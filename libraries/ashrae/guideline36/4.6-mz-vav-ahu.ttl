@prefix bmotif: <https://nrel.gov/BuildingMOTIF#> .
@prefix brick: <https://brickschema.org/schema/Brick#> .
@prefix components: <urn:ashrae/g36/components/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix : <urn:ashrae/g36/4.6/mz-vav-ahu/> .

:mz-vav-ahu a sh:NodeShape, owl:Class, bmotif:System_Specification ;
    rdfs:label "Multiple-Zone VAV Air-Handling Unit" ;
    sh:class brick:Air_Handling_Unit ;
    # supply air fan, required
    sh:property [
        rdfs:label "Supply Fan with VFD" ;
        sh:path brick:hasPart ;
        sh:qualifiedValueShape [
            sh:node components:variable-speed-fan-vfd ;
            # application TODO resets DP sensor, see schematic
            sh:property [
                rdfs:label "Supply fan high static alarm reset" ;
                rdfs:comment "(optional-see control schematic)" ;
                sh:qualifiedValueShape [ sh:class brick:Reset_Command ] ;
                sh:qualifiedMinCount 0 ;
                sh:qualifiedMaxCount 1 ;
            ] ;
        ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1 ;
    ] ;
    # required
    sh:property [
        rdfs:label "Supply air temperature" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Supply_Air_Temperature_Sensor ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1 ;
    ] ;
    # required
    sh:property [
        rdfs:label "Duct static pressure (DSP)" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Air_Differential_Pressure_Sensor ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1 ;
    ] ;
    # filter, required
    sh:property [
        sh:path brick:hasPart ;
        sh:qualifiedValueShape [ sh:node components:filter ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1 ;
    ] ;
    # heating coil, optional
    sh:property [
        sh:path brick:hasPart ;
        sh:qualifiedValueShape [
            sh:node components:heating-coil ;
            # optional
            sh:property [
                rdfs:label "Heating coil supply air temperature" ;
                sh:path brick:hasPoint ;
                sh:qualifiedValueShape [ sh:class brick:Supply_Air_Temperature_Sensor ] ;
                sh:qualifiedMinCount 0 ;
                sh:qualifiedMaxCount 1 ;
            ] ;
        ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1 ;
    ] ;
    # outdoor air damper(s) (economizer), required
    # NOTE options are rather unclear in G36
    # 1. economizer damper (only)
    # 2. common economizer/minimum OA damper (with AFMS)
    # 3. separate minimum oa damper and DP sensor (without AFMS)
    # 4. separate minimum oa damper and AFMS
    sh:property [
        sh:path brick:hasPart ;
        sh:qualifiedValueShape [
            sh:or (
                sh:node :economizer-damper
                sh:node :economizer-minimum-oa-damper
                sh:and (
                    sh:node :economizer-damper
                    sh:node :minimum-oa-damper
                )
                sh:and (
                    sh:node :economizer-damper
                    sh:node :minimum-oa-damper-afms
                )
            )
        ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1 ;
    ] ;
    # return air damper
    sh:property [
        rdfs:label "Return Air Damper" ;
        sh:path brick:hasPart ;
        sh:qualifiedValueShape [ sh:node components:damper-modulating ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1 ;
    ] ;
    # required
    sh:property [
        rdfs:label "Outdoor air temperature" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Outside_Air_Temperature_Sensor ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1 ;
    ] ;
    # optional
    sh:property [
        rdfs:label "Mixed air temperature" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Mixed_Air_Temperature_Sensor ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1 ;
    ] ;
    # application
    # NOTE not clear what application
    sh:property [
        rdfs:label "Return air temperature" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Return_Air_Temperature_Sensor ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1 ;
    ] ;
    # cooling coil
    sh:property [
        sh:path brick:hasPart ;
        sh:qualifiedValueShape [ sh:node components:cooling-coil ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1 ;
    ] ;
    # heating signal, see above
    # outdoor air, see above
    # relief air, optional
    sh:property [
        sh:path brick:hasPart ;
        sh:qualifiedValueShape [
            sh:or (
                sh:node :relief-damper
                sh:and (
                    sh:node :relief-fan
                    sh:node :relief-fan-damper
                )
            )
        ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1 ;
    ] ;
    # return air, optional
    sh:property [
        sh:path brick:hasPart ;
        sh:qualifiedValueShape [
            sh:and (
                sh:node :return-fan
                sh:node :return-fan-exhaust-damper
            )
        ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1 ;
    ] ;
.

# outdoor air

# option 1
:economizer-damper a sh:NodeShape, owl:Class, bmotif:HVAC ;
    rdfs:label "Economizer Damper" ;
    sh:node components:damper-modulating .

# option 2
# For units with a common economizer/minimum OA damper, include the following points.
:economizer-minimum-oa-damper a sh:NodeShape, owl:Class, bmotif:HVAC ;
    rdfs:label "common economizer/minimum OA damper (and AFMS)" ;
    sh:node components:damper-modulating ;
    # application, Airflow measurement station (AFMS)
    sh:property [
        rdfs:label "Outdoor airflow" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Outside_Air_Flow_Sensor ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1 ;
    ] .

# option 3
# For units with a separate minimum outdoor air damper and DP sensor, include the following points.
# Figure A-10?
:minimum-oa-damper a sh:NodeShape, owl:Class, bmotif:HVAC ;
    rdfs:label "minimum outdoor air damper" ;
    sh:node components:damper-two-position ;
    # application
    sh:property [
        rdfs:label "Minimum outdoor air damper DP" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Air_Differential_Pressure_Sensor ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1 ;
    ] .

# option 4
# For units with a separate minimum outdoor air damper and AFMS, include the following points.
# Figure A-9?
:minimum-oa-damper-afms a sh:NodeShape, owl:Class, bmotif:HVAC ;
    rdfs:label "minimum outdoor air damper and AFMS" ;
    sh:node components:damper-modulating ;
    # application, Airflow measurement station (AFMS)
    sh:property [
        rdfs:label "Minimum outdoor airflow" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Outside_Air_Flow_Sensor ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1 ;
    ] .

# relief air

# For units with actuated relief dampers but no relief fan, include the following points.
:relief-damper a sh:NodeShape, owl:Class, bmotif:HVAC ;
    rdfs:label "Relief Damper" ;
    sh:node components:damper-modulating ;
    # NOTE G36 description (open/close) conflicts with type (AO) and device (modulating actuator)
    # assume it's an AO point for Damper_Position_Command from components:damper rather than Open_Close_Command below
    # application
    # sh:property [
    #     rdfs:label "Relief damper open/close" ;
    #     sh:path brick:hasPoint ;
    #     sh:qualifiedValueShape [ sh:class brick:Open_Close_Command ] ;
    #     sh:qualifiedMinCount 1 ;
    #     sh:qualifiedMaxCount 1 ;
    # ] ;
    # application
    sh:property [
        rdfs:label "Building static pressure" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Air_Differential_Pressure_Sensor ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1 ;
    ] .

# For units with a relief fan, include the following points.
:relief-fan a sh:NodeShape, owl:Class, bmotif:HVAC ;
    rdfs:label "Relief Fan with VFD" ;
    sh:node components:variable-speed-fan-vfd .

:relief-fan-damper a sh:NodeShape, owl:Class, bmotif:HVAC ;
    rdfs:label "Relief Damper" ;
    sh:node components:damper-two-position ;
    # application
    sh:property [
        rdfs:label "Building static pressure" ;
        rdfs:comment "(if direct building pressure logic is used)" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Air_Differential_Pressure_Sensor ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1 ;
    ] .

# return air

# For units with a return fan, include the following points.
:return-fan a sh:NodeShape, owl:Class, bmotif:HVAC ;
    sh:node components:variable-speed-fan-vfd ;
    # application
    sh:property [
        rdfs:label "Return-fan high-static alarm reset" ;
        rdfs:comment "(optional-see control schematic)" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Reset_Command ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1 ;
    ] ;
    # application
    sh:property [
        rdfs:label "Supply airflow" ;
        rdfs:comment "(if airflow tracking logic used)" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Supply_Air_Flow_Sensor ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1 ;
    ] ;
    # application
    sh:property [
        rdfs:label "Return airflow" ;
        rdfs:comment "(if airflow tracking logic used)" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Return_Air_Flow_Sensor ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1 ;
    ] ;
    # application
    sh:property [
        rdfs:label "Return-fan discharge static pressure" ;
        rdfs:comment "(if direct building pressure logic is used)" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Discharge_Air_Static_Pressure_Sensor ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1 ;
    ] ;
    # application
    sh:property [
        rdfs:label "Building static pressure" ;
        rdfs:comment "(if direct building pressure logic is used)" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Air_Differential_Pressure_Sensor ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1 ;
    ] .

:return-fan-exhaust-damper a sh:NodeShape, owl:Class, bmotif:HVAC ;
    rdfs:label "Exhaust damper" ;
    sh:node components:damper-modulating .
