@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix brick: <https://brickschema.org/schema/Brick#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix bmotif: <https://nrel.gov/BuildingMOTIF#> .
@prefix components: <urn:ashrae/g36/components/> .
@prefix : <urn:ashrae/g36/4.10/chilled-water-plant/> .

: a owl:Ontology .

# 4.10 Chilled Water Plant

:chilled-water-plant a sh:NodeShape, owl:Class, bmotif:System_Specification ;
    sh:or (
        sh:node :air-cooled-primary-only-plant
        sh:node :wtr-cooled-primary-only-plant
        sh:node :air-cooled-primary-secondary-plant
        sh:node :wtr-cooled-primary-secondary-plant
    ) .

:air-cooled-primary-only-plant a sh:NodeShape, owl:Class, bmotif:System_Specification ;
    rdfs:label "Air-Cooled Primary-Only CHW Plant" ;
    sh:class brick:Chilled_Water_System ;
    sh:property [
        sh:path brick:hasPart ;
        sh:qualifiedValueShape [
            sh:node :air-cooled-chiller ;
            # Primary-only plant sequences use the demand limit point to promote stable staging. Flowrates can change rapidly
            # through operating chiller(s) when an additional chiller is brought online; limiting output can help prevent a low
            # supply temperature trip condition. This is not an issue for primary/secondary plants, but the demand limit point may
            # be retained for custom electric utility driven load shed logic not covered by this guideline. Note that load shed logic is
            # covered in Thermal Zone Guideline 36 sequences and the reduced demand generated by zones ultimately serves to
            # reduce plant output.
            # applications, per 4.10.1
            sh:property [
                rdfs:label "CH Demand Limit" ;
                rdfs:comment "Required for primary-only CHW plants, optional for other plant types." ;
                sh:path brick:hasPoint ;
                sh:qualifiedValueShape [ sh:class brick:Cooling_Demand_Setpoint ] ;
                sh:qualifiedMinCount 1 ;
                sh:qualifiedMaxCount 1
            ]
        ] ;
        sh:qualifiedMinCount 1
    ] ;
    sh:property [
        sh:path brick:hasPart ;
        sh:qualifiedValueShape [
            sh:or (
                sh:node :constant-primary-only-loop
                sh:node :variable-primary-only-loop
            )
        ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1 ;
    ] ;
    # applications, TODO see comment
    sh:property [
        rdfs:label "Plant CHW return temperature" ;
        rdfs:comment "CHW return temperature required for primary-only plants; locate on plant side of the CHW minimum flow bypass to allow for correct load calculations." ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Entering_Chilled_Water_Temperature_Sensor ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1
    ] .

:wtr-cooled-primary-only-plant a sh:NodeShape, owl:Class, bmotif:System_Specification ;
    rdfs:label "Water-Cooled Primary-Only CHW Plant" ;
    sh:class brick:Chilled_Water_System ;
    sh:property [
        sh:path brick:hasPart ;
        sh:qualifiedValueShape [
            sh:node :wtr-cooled-chiller ;
            # Primary-only plant sequences use the demand limit point to promote stable staging. Flowrates can change rapidly
            # through operating chiller(s) when an additional chiller is brought online; limiting output can help prevent a low
            # supply temperature trip condition. This is not an issue for primary/secondary plants, but the demand limit point may
            # be retained for custom electric utility driven load shed logic not covered by this guideline. Note that load shed logic is
            # covered in Thermal Zone Guideline 36 sequences and the reduced demand generated by zones ultimately serves to
            # reduce plant output.
            # applications, per 4.10.1
            sh:property [
                rdfs:label "CH Demand Limit" ;
                rdfs:comment "Required for primary-only CHW plants, optional for other plant types." ;
                sh:path brick:hasPoint ;
                sh:qualifiedValueShape [ sh:class brick:Cooling_Demand_Setpoint ] ;
                sh:qualifiedMinCount 1 ;
                sh:qualifiedMaxCount 1
            ]
        ] ;
        sh:qualifiedMinCount 1
    ] ;
    sh:property [
        sh:path brick:hasPart ;
        sh:qualifiedValueShape [
            sh:or (
                sh:node :constant-primary-only-loop
                sh:node :variable-primary-only-loop
            )
        ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1 ;
    ] ;
    # applications, TODO see comment
    sh:property [
        rdfs:label "Plant CHW return temperature" ;
        rdfs:comment "CHW return temperature required for primary-only plants; locate on plant side of the CHW minimum flow bypass to allow for correct load calculations." ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Entering_Chilled_Water_Temperature_Sensor ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1
    ] ;
    sh:property [
        sh:path brick:isFedBy ;
        sh:qualifiedValueShape [ sh:node :condenser-water-plant ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1
    ] .

:air-cooled-primary-secondary-plant a sh:NodeShape, owl:Class, bmotif:System_Specification ;
    rdfs:label "Air-Cooled Primary-Secondary CHW Plant" ;
    sh:class brick:Chilled_Water_System ;
    sh:property [
        sh:path brick:hasPart ;
        sh:qualifiedValueShape [
            sh:node :air-cooled-chiller ;
            # Primary-only plant sequences use the demand limit point to promote stable staging. Flowrates can change rapidly
            # through operating chiller(s) when an additional chiller is brought online; limiting output can help prevent a low
            # supply temperature trip condition. This is not an issue for primary/secondary plants, but the demand limit point may
            # be retained for custom electric utility driven load shed logic not covered by this guideline. Note that load shed logic is
            # covered in Thermal Zone Guideline 36 sequences and the reduced demand generated by zones ultimately serves to
            # reduce plant output.
            # applications, per 4.10.1
            sh:property [
                rdfs:label "CH Demand Limit" ;
                rdfs:comment "Required for primary-only CHW plants, optional for other plant types." ;
                sh:path brick:hasPoint ;
                sh:qualifiedValueShape [ sh:class brick:Cooling_Demand_Setpoint ] ;
                sh:qualifiedMinCount 0 ;
                sh:qualifiedMaxCount 1
            ] ;
        ] ;
        sh:qualifiedMinCount 1
    ] ;
    sh:property [
        sh:path brick:hasPart ;
        sh:qualifiedValueShape [
            sh:or (
                sh:node :constant-primary-constant-secondary-loop
                sh:node :constant-primary-variable-secondary-loop
                sh:node :variable-primary-constant-secondary-loop
                sh:node :variable-primary-variable-secondary-loop
            )
        ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1
    ] ;
    # applications
    sh:property [
        rdfs:label "Plant CHW return temperature" ;
        rdfs:comment "Optional for primary-secondary plants." ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Entering_Chilled_Water_Temperature_Sensor ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1
    ] .

:wtr-cooled-primary-secondary-plant a sh:NodeShape, owl:Class, bmotif:System_Specification ;
    rdfs:label "Water-Cooled Primary-Secondary CHW Plant" ;
    sh:node :primary-secondary-plant ;
    sh:property [
        sh:path brick:hasPart ;
        sh:qualifiedValueShape [
            sh:node :wtr-cooled-chiller ;
            # Primary-only plant sequences use the demand limit point to promote stable staging. Flowrates can change rapidly
            # through operating chiller(s) when an additional chiller is brought online; limiting output can help prevent a low
            # supply temperature trip condition. This is not an issue for primary/secondary plants, but the demand limit point may
            # be retained for custom electric utility driven load shed logic not covered by this guideline. Note that load shed logic is
            # covered in Thermal Zone Guideline 36 sequences and the reduced demand generated by zones ultimately serves to
            # reduce plant output.
            # applications, per 4.10.1
            sh:property [
                rdfs:label "CH Demand Limit" ;
                rdfs:comment "Required for primary-only CHW plants, optional for other plant types." ;
                sh:path brick:hasPoint ;
                sh:qualifiedValueShape [ sh:class brick:Cooling_Demand_Setpoint ] ;
                sh:qualifiedMinCount 0 ;
                sh:qualifiedMaxCount 1
            ] ;
        ] ;
        sh:qualifiedMinCount 1
    ] ;
    sh:property [
        sh:path brick:hasPart ;
        sh:qualifiedValueShape [
            sh:or (
                sh:node :constant-primary-constant-secondary-loop
                sh:node :constant-primary-variable-secondary-loop
                sh:node :variable-primary-constant-secondary-loop
                sh:node :variable-primary-variable-secondary-loop
            )
        ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1
    ] ;
    # applications
    sh:property [
        rdfs:label "Plant CHW return temperature" ;
        rdfs:comment "Optional for primary-secondary plants." ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Entering_Chilled_Water_Temperature_Sensor ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1
    ] ;
    sh:property [
        sh:path brick:isFedBy ;
        sh:qualifiedValueShape [ sh:node :condenser-water-plant ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1
    ] .

:condenser-water-plant a sh:NodeShape, owl:Class, bmotif:System_Specification ;
    rdfs:label "Condenser Water Plant" ;
    sh:class brick:Condenser_Water_System ;
    sh:property [
        sh:path brick:hasPart ;
        sh:qualifiedValueShape [ sh:node :cooling-tower ] ;
        sh:qualifiedMinCount 1
    ] ;
    sh:property [
        sh:path brick:hasPart ;
        sh:qualifiedValueShape [ sh:node :condenser-water-loop ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1
    ] ;
    sh:property [
        sh:path brick:feeds ;
        sh:qualifiedValueShape [
            sh:node :wse-loop ;
            # 4.10.9
            # Temperature and relative humidity sensors are necessary for calculating wet bulb temperature for waterside
            # economizer sequences. Sensors are optional for plants without waterside economizers.
            sh:property [
                sh:path brick:hasPoint ;
                sh:qualifiedValueShape [ sh:class brick:Outside_Air_Temperature_Sensor ] ;
                sh:qualifiedMinCount 1 ;
                sh:qualifiedMaxCount 1
            ] ;
            sh:property [
                sh:path brick:hasPoint ;
                sh:qualifiedValueShape [ sh:class brick:Outside_Air_Humidity_Sensor ] ;
                sh:qualifiedMinCount 1 ;
                sh:qualifiedMaxCount 1
            ]
        ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1
    ] ;
    # 4.10.9
    # Temperature and relative humidity sensors are necessary for calculating wet bulb temperature for waterside
    # economizer sequences. Sensors are optional for plants without waterside economizers.
    sh:property [
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Outside_Air_Temperature_Sensor ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1
    ] ;
    sh:property [
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Outside_Air_Humidity_Sensor ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1
    ] .

# 4.10.1 Chillers

:chiller a sh:NodeShape, owl:Class, bmotif:HVAC ;
    sh:class brick:Chiller ;
    # required
    sh:property [
        rdfs:label "CH on/off" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:On_Off_Command ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1
    ] ;
    # required
    sh:property [
        rdfs:label "Chiller status" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:On_Off_Status ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1
    ] ;
    # required
    sh:property [
        rdfs:label "CHWST Setpoint Reset" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Reset_Command ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1
    ] ;
    # required
    sh:property [
        rdfs:label "Chiller Fault Code" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Last_Fault_Code_Status ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1
    ] ;
    # applications
    sh:property [
        sh:path brick:hasPart ;
        sh:qualifiedValueShape [ sh:node :ch-chw-isolation-valve ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1
    ] ;
    # applications
    sh:property [
        sh:path brick:hasPart ;
        sh:qualifiedValueShape [ sh:node :ch-chw-bypass-valve ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1
    ] ;
    # see wtr-cooled-chiller for...
    # CH CW isolation valve
    # CH CW isolation valve closed end switch
    # CH CW isolation valve open end switch
    # CH CW isolation valve position feedback
    # see primary-only-plant and primary-secondary-plant for...
    # CH Demand Limit
    # applications
    sh:property [
        rdfs:label "Head pressure control signal from CH" ;
        rdfs:comment "Head pressure control output required only for chillers that require head pressure control. This is an output from the chiller controller head pressure control loop." ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Pressure_Sensor ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1
    ] ;
    # TODO
    # CH CHW supply temperature is required for (1) variable primary-variable secondary plants using primary and
    # secondary supply temperatures to reset primary pump speed that do not have a CHWST sensor in the primary
    # loop, (2) head pressure control for chillers that do not have a head pressure control signal. Optional otherwise.
    # applications
    sh:property [
        rdfs:label "CH CHW supply temperature" ;
        sh:qualifiedValueShape [ sh:class brick:Leaving_Chilled_Water_Temperature_Sensor ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1
    ] ;
    # see wtr-cooled-chiller for...
    # CH CW return temperature
    # optional
    sh:property [
        rdfs:label "CH CHW return temperature" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Entering_Chilled_Water_Temperature_Sensor ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1
    ] ;
    # see wtr-cooled-chiller for...
    # CH CW supply temperature
    # optional
    sh:property [
        rdfs:label "CH evaporator buddle CHW differential pressure" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Chilled_Water_Differential_Pressure_Sensor ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1
    ] ;
    # see wtr-cooled-chiller for...
    # CH condenser buddle CW differential pressure
    # optional
    sh:property [
        rdfs:label "CH refrigerant evaporator temperature" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Temperature_Sensor ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1
    ] ;
    # optional
    sh:property [
        rdfs:label "CH refrigerant condenser temperature" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Temperature_Sensor ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1
    ] ;
    # optional
    sh:property [
        rdfs:label "Chiller local/auto switch" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Manual_Auto_Status ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1
    ] ;
    # optional per 4.10.9
    sh:property [
        rdfs:label "Emergency Chiller Off Switch" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Off_Status ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1
    ] .

:air-cooled-chiller a sh:NodeShape, owl:Class, bmotif:HVAC ;
    rdfs:label "Air-Cooled Chiller" ;
    sh:node :chiller .

:wtr-cooled-chiller a sh:NodeShape, owl:Class, bmotif:HVAC ;
    rdfs:label "Water-Cooled Chiller" ;
    sh:node :chiller ;
    sh:property [
        sh:path brick:hasPart ;
        sh:qualifiedValueShape [ sh:node :ch-cw-isolation-valve ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1
    ] ;
    # applications, TODO see comment
    sh:property [
        rdfs:label "CH CW return temperature" ;
        rdfs:comment "CH CW return temperature is required for head pressure control for chillers that do not have a head pressure control signal. Optional otherwise." ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Entering_Condenser_Water_Temperature_Sensor ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1
    ] ;
    # optional
    sh:property [
        rdfs:label "CH CW supply temperature" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Leaving_Condenser_Water_Temperature_Sensor ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1
    ] ;
    # optional
    sh:property [
        rdfs:label "CH condenser buddle CW differential pressure" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Differential_Pressure_Sensor ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1
    ] .

# TODO see comment, could separate first point based on flow type
# A modulating valve is recommended on primary-only variable flow systems to allow for slow changes in flow during
# chiller staging. Sometimes electric valve timing may be sufficiently slow that 2-position valves can provide stable
# performance. Two-position valves are acceptable on primary-secondary systems.
:ch-chw-isolation-valve a sh:NodeShape, owl:Class, bmotif:HVAC ;
    rdfs:label "Chiller CHW Isolation Valve" ;
    rdfs:comment "Required for parallel or series piped chillers with headered primary CHW pumps. Delete otherwise." ;
    sh:class brick:Isolation_Valve ;
    # applications
    sh:property [
        rdfs:label "CH CHW isolation valve" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [
            sh:or (
                sh:class brick:Valve_Position_Command
                sh:class brick:On_Off_Command
            )
        ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMinCount 1
    ] ;
    # Retain the following two points for optional valve end switch status feedback.
    # optional
    sh:property [
        rdfs:label "CH CHW isolation valve closed end switch" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:On_Status ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1
    ] ;
    # optional
    sh:property [
        rdfs:label "CH CHW isolation valve open end switch" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Off_Status ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1
    ] ;
    # Retain the following points for optional analog valve position feedback.
    # optional
    sh:property [
        rdfs:label "CH CHW isolation valve position feedback" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Valve_Position_Sensor ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1
    ] .

# TODO see comment
:ch-chw-bypass-valve a sh:NodeShape, owl:Class, bmotif:HVAC ;
    rdfs:label "Chiller CHW Bypass Valve" ;
    rdfs:comment "Required for series piped chillers and primary-only parallel CHW plants with waterside economizers. Delete otherwise." ;
    sh:class brick:Bypass_Valve ;
    # applications
    sh:property [
        rdfs:label "CH CHW bypass valve" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:On_Off_Command ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMinCount 1
    ] .

# TODO
# Required for plants with headered condenser water pumps. Delete otherwise. CW isolation valves may be two-position
# for chillers that do not require head pressure control or for plants with variable speed condenser
# pumps but no waterside economizer.
:ch-cw-isolation-valve a sh:NodeShape, owl:Class, bmotif:HVAC ;
    rdfs:label "Chiller CW Isolation Valve" ;
    sh:class brick:Condenser_Water_Isolation_Valve ;
    # applications, required if present
    sh:property [
        rdfs:label "CH CW isolation valve" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [
            sh:or (
                sh:class brick:Valve_Position_Command
                sh:class brick:On_Off_Command
            )
        ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1
    ] ;
    # Retain the following two points for optional valve end switch status feedback.
    # optional
    sh:property [
        rdfs:label "CH CW isolation valve closed end switch" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:On_Status ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1
    ] ;
    # optional
    sh:property [
        rdfs:label "CH CW isolation valve open end switch" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Off_Status ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1
    ] ;
    # Retain the following points for optional analog valve position feedback.
    # optional
    sh:property [
        rdfs:label "CH CW isolation valve position feedback" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Valve_Position_Sensor ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1
    ] .

# 4.10.2 Chilled Water Pumps (see components.ttl)

# Provide one speed point for each group of variable speed CHW pumps controlled to the same speed (e.g., all
# primary pumps or all secondary pumps, if applicable). Speed point not required for constant speed pumps.

# TODO currently optional in components...
# Provide a CHW differential pressure sensor hardwired to the pump controller for any pump or set of pumps
# serving multiple control valves. Additional pressure sensors may be provided with feedback sent over the
# network to the pump controller.

# 4.10.3 Primary (only) CHW Loop

:primary-only-loop a sh:NodeShape, owl:Class, bmotif:HVAC ;
    sh:class brick:Chilled_Water_Loop ;
    # applications
    sh:property [
        rdfs:label "CHW supply or return flow" ;
        rdfs:comment "CHW flow required for primary-only plants; the flow meter must be located on the plant side of the CHW minimum flow bypass where provided." ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [
            sh:or (
                sh:class brick:Leaving_Chilled_Water_Flow_Sensor
                sh:class brick:Entering_Chilled_Water_Flow_Sensor
            )
        ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1
    ] ;
    # see variable-primary-only-loop for...
    # CHW Min Flow Bypass Valve
    # applications
    sh:property [
        rdfs:label "CHW supply temperature" ;
        rdfs:comment "CHW supply temperature sensor required for primary-only plants." ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Leaving_Chilled_Water_Temperature_Sensor ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1
    ] ;
    # see variable-primary-only-loop for...
    # Plant CHW return temperature
    # Loop CHW return temperature
    # optional https://github.com/BrickSchema/Brick/issues/532
    sh:property [
        rdfs:label "CHW system gauge pressure" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Pressure_Sensor ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1
    ] .
    # see 4.10.4 variable-primary-variable-secondary-loop for...
    # Decoupler flow

:constant-primary-only-loop a sh:NodeShape, owl:Class, bmotif:HVAC ;
    rdfs:label "Constant Primary-Only CHW Loop" ;
    sh:node :primary-only-loop ;
    sh:property [
        sh:path brick:hasPart ;
        sh:qualifiedValueShape [ sh:node components:constant-speed-pump ] ;
        sh:qualifiedMinCount 1
    ] .

:variable-primary-only-loop a sh:NodeShape, owl:Class, bmotif:HVAC ;
    rdfs:label "Variable Primary-Only CHW Loop" ;
    sh:node :primary-only-loop ;
    sh:property [
        sh:path brick:hasPart ;
        sh:qualifiedValueShape [ sh:node components:variable-speed-pump ] ;
        sh:qualifiedMinCount 1
    ] ;
    # applications
    sh:property [
        rdfs:comment "CHW bypass valve is required for variable flow primary-only plants. Delete otherwise." ;
        sh:path brick:hasPart ;
        sh:qualifiedValueShape [ sh:node components:min-flow-bypass-valve ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMinCount 1
    ] ;
    # applications
    sh:property [
        rdfs:label "Plant CHW return temperature" ;
        rdfs:comment "CHW return temperature required for primary-only plants; locate on plant side of the CHW minimum flow bypass to allow for correct load calculations." ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Entering_Chilled_Water_Temperature_Sensor ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1 ;
    ] ;
    # NOTE this makes the distinction between the "demand" loop on the coil side and the "supply" loop on the plant side where the bypass is the demarcation between the two loops
    sh:property [
        sh:path brick:feeds ;
        sh:qualifiedValueShape [
            rdfs:label "CHW Demand Loop" ;
            sh:class brick:Chilled_Water_Loop ;
            # optional, TODO see comment
            sh:property [
                rdfs:label "Loop CHW return temperature" ;
                rdfs:comment "Optional sensor for monitoring temperature coming back from coils in primary-only plants with a CHW bypass and no waterside economizer. Located on the load side of minimum flow bypass. Delete for all other plant configurations." ;
                sh:path brick:hasPoint ;
                sh:qualifiedValueShape [ sh:class brick:Entering_Chilled_Water_Temperature_Sensor ] ;
                sh:qualifiedMinCount 0 ;
                sh:qualifiedMaxCount 1
            ] ;
        ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1 ;
    ] .

# 4.10.4 (Primary) Secondary CHW Loop

:primary-loop a sh:NodeShape, owl:Class, bmotif:HVAC ;
    sh:class brick:Chilled_Water_Loop ;
    # applications, optional per 4.10.3
    sh:property [
        rdfs:label "CHW supply temperature" ;
        rdfs:comment "Optional for primary-secondary Plants." ;
        sh:qualifiedValueShape [ sh:class brick:Leaving_Chilled_Water_Temperature_Sensor ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1
    ] ;
    # applications, optional per 4.11.3
    sh:property [
        rdfs:label "Plant CHW return temperature" ;
        rdfs:comment "Optional for primary-secondary plants." ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Entering_Chilled_Water_Temperature_Sensor ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1
    ] .

:constant-primary-loop a sh:NodeShape, owl:Class, bmotif:HVAC ;
    rdfs:label "Constant Primary CHW Loop" ;
    sh:node :primary-loop ;
    sh:property [
        sh:path brick:hasPart ;
        sh:qualifiedValueShape [ sh:node components:constant-speed-pump ] ;
        sh:qualifiedMinCount 1
    ] .

:variable-primary-loop a sh:NodeShape, owl:Class, bmotif:HVAC ;
    rdfs:label "Variable Primary CHW Loop" ;
    sh:node :primary-loop ;
    sh:property [
        sh:path brick:hasPart ;
        sh:qualifiedValueShape [ sh:node components:variable-speed-pump ] ;
        sh:qualifiedMinCount 1
    ] .

:secondary-loop a sh:NodeShape, owl:Class, bmotif:HVAC ;
    sh:class brick:Chilled_Water_Loop ;
    # required
    sh:property [
        rdfs:label "Secondary CHW supply temperature" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Leaving_Chilled_Water_Temperature_Sensor ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1
    ] ;
    # applications, TODO see comment
    sh:property [
        rdfs:label "Secondary CHW return temperature" ;
        rdfs:comment "Retain this sensor for primary-secondary plants without waterside economizers. Delete otherwise." ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Entering_Chilled_Water_Temperature_Sensor ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1
    ] ;
    # required
    sh:property [
        rdfs:label "Secondary CHW supply or return flow" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [
            sh:or (
                sh:class brick:Leaving_Chilled_Water_Flow_Sensor
                sh:class brick:Entering_Chilled_Water_Flow_Sensor
            )
        ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1
    ] .

:constant-secondary-loop a sh:NodeShape, owl:Class, bmotif:HVAC ;
    rdfs:label "Constant Secondary CHW Loop" ;
    sh:node :secondary-loop ;
    sh:property [
        sh:path brick:hasPart ;
        sh:qualifiedValueShape [ sh:node components:constant-speed-pump ] ;
        sh:qualifiedMinCount 1
    ] .

:variable-secondary-loop a sh:NodeShape, owl:Class, bmotif:HVAC ;
    rdfs:label "Variable Secondary CHW Loop" ;
    sh:node :secondary-loop ;
    sh:property [
        sh:path brick:hasPart ;
        sh:qualifiedValueShape [ sh:node components:variable-speed-pump ] ;
        sh:qualifiedMinCount 1
    ] .

:constant-primary-constant-secondary-loop a sh:NodeShape, owl:Class, bmotif:HVAC ;
    rdfs:label "Constant Primary-Constant Secondary CHW Loop" ;
    sh:class brick:Chilled_Water_Loop ;
    sh:property [
        sh:path brick:hasPart ;
        sh:qualifiedValueShape [
            sh:node :constant-primary-loop ;
            sh:property [
                sh:path brick:feeds ;
                sh:qualifiedValueShape [ sh:node :constant-secondary-loop ] ;
                sh:qualifiedMinCount 1 ;
                sh:qualifiedMaxCount 1
            ]
        ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1 ;
    ] .

:constant-primary-variable-secondary-loop a sh:NodeShape, owl:Class, bmotif:HVAC ;
    rdfs:label "Constant Primary-Variable Secondary CHW Loop" ;
    sh:class brick:Chilled_Water_Loop ;
    sh:property [
        sh:path brick:hasPart ;
        sh:qualifiedValueShape [
            sh:node :constant-primary-loop ;
            # 4.10.3
            sh:property [
                rdfs:label "CHW supply or return flow" ;
                rdfs:comment "Not required nor recommended for constant primary-variable secondary plants." ;
                sh:path brick:hasPoint ;
                sh:qualifiedValueShape [
                    sh:or (
                        sh:class brick:Leaving_Chilled_Water_Flow_Sensor
                        sh:class brick:Entering_Chilled_Water_Flow_Sensor
                    )
                ] ;
                sh:qualifiedMaxCount 0
            ] ;
            sh:property [
                sh:path brick:feeds ;
                sh:qualifiedValueShape [ sh:node :variable-secondary-loop ] ;
                sh:qualifiedMinCount 1 ;
                sh:qualifiedMaxCount 1
            ]
        ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1
    ] .

:variable-primary-constant-secondary-loop a sh:NodeShape, owl:Class, bmotif:HVAC ;
    rdfs:label "Variable Primary-Constant Secondary CHW Loop" ;
    sh:class brick:Chilled_Water_Loop ;
    sh:property [
        sh:path brick:hasPart ;
        sh:qualifiedValueShape [
            sh:node :variable-primary-loop ;
            sh:property [
                sh:path brick:feeds ;
                sh:qualifiedValueShape [ sh:node :constant-secondary-loop ] ;
                sh:qualifiedMinCount 1 ;
                sh:qualifiedMaxCount 1
            ]
        ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1
    ] .

:variable-primary-variable-secondary-loop a sh:NodeShape, owl:Class, bmotif:HVAC ;
    rdfs:label "Variable Primary-Variable Secondary CHW Loop" ;
    sh:class brick:Chilled_Water_Loop ;
    sh:property [
        sh:path brick:hasPart ;
        sh:qualifiedValueShape [
            sh:node :variable-primary-loop ;
            # optional per 4.10.3
            sh:property [
                rdfs:label "CHW supply or return flow" ;
                rdfs:comment "Optional for variable primary-variable secondary plants." ;
                sh:path brick:hasPoint ;
                sh:qualifiedValueShape [
                    sh:or (
                        sh:class brick:Leaving_Chilled_Water_Flow_Sensor
                        sh:class brick:Entering_Chilled_Water_Flow_Sensor
                    )
                ] ;
                sh:qualifiedMinCount 0 ;
                sh:qualifiedMaxCount 1
            ] ;
            # optional per 4.10.3
            sh:property [
                rdfs:label "Decoupler flow" ;
                rdfs:comment "Optional flow meter for primary pump speed control in variable primary-variable secondary plants." ;
                sh:path brick:hasPoint ;
                sh:qualifiedValueShape [ sh:node brick:Chilled_Water_Flow_Sensor ] ;
                sh:qualifiedMinCount 0 ;
                sh:qualifiedMaxCount 1
            ] ;
            sh:property [
                sh:path brick:feeds ;
                sh:qualifiedValueShape [ sh:node :variable-secondary-loop ] ;
                sh:qualifiedMinCount 1 ;
                sh:qualifiedMaxCount 1
            ]
        ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1
    ] .

# 4.10.5 Condenser Water Pumps (see components.ttl)
# The following points apply for water-cooled plants. Delete otherwise.

# 4.10.6 Cooling Towers
# The following points apply for water-cooled plants. Delete otherwise.

:cooling-tower a sh:NodeShape, owl:Class, bmotif:HVAC ;
    rdfs:label "Cooling Tower" ;
    sh:class brick:Cooling_Tower ;
    # see variable-speed-fan for...
    # Start CT
    # CT Status
    # CT Speed
    # CT Alarm
    # NOTE VFD fans appear to be required implicitly by point requirements
    sh:property [
        sh:path brick:hasPart ;
        sh:qualifiedValueShape [ sh:node :variable-speed-fan ] ;
        sh:qualifiedMinCount 1
    ] ;
    # required
    sh:property [
        rdfs:label "Tower basin level" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Collection_Basin_Water_Level_Sensor ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1
    ] ;
    # Keep the following inlet and outlet isolation valve points if cooling towers have actuated isolation valves. They
    # may have a valve only on the supply with an oversized equalizer used to avoid valves on the outlet, or they may
    # have valves at both inlet and outlet. Delete otherwise.
    sh:or (
        sh:property [
            sh:path brick:hasPart ;
            sh:qualifiedValueShape [ sh:node :ct-outlet-isolation-valve ] ;
            sh:qualifiedMinCount 0 ;
            sh:qualifiedMaxCount 1
        ]
        sh:property [
            sh:path brick:hasPart ;
            sh:qualifiedValueShape [
                sh:and (
                    sh:node :ct-inlet-isolation-valve
                    sh:node :ct-outlet-isolation-valve
                )
            ] ;
            sh:qualifiedMinCount 0 ;
            sh:qualifiedMaxCount 1
        ]
    ) ;
    # Keep the following tower bypass, basin heater, and basin temperature points for freezing climates where basins
    # will not be drained during winter months due to continued plant operation. Delete otherwise.
    sh:property [
        sh:path brick:hasPart ;
        sh:qualifiedValueShape [ sh:node :ct-bypass-valve ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1
    ] ;
    sh:property [
        sh:path brick:hasPart ;
        sh:qualifiedValueShape [ sh:node :ct-basin-heater ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1
    ] ;
    # Keep the following piping heat trace points for freezing climates with outdoor piping. Delete otherwise.
    # applications
    sh:property [
        rdfs:label "Piping heat trace enable" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Heating_Enable_Command ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1
    ] ;
    # applications
    sh:property [
        rdfs:label "Piping heat trace status" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Enable_Status ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1
    ] .

:variable-speed-fan-motor a sh:NodeShape, owl:Class, bmotif:HVAC ;
    rdfs:label "Variable Speed Fan Motor" ;
    sh:class brick:Variable_Frequency_Drive ;
    # required
    sh:property [
        rdfs:label "Fan Start" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:On_Off_Command ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1
    ] ;
    # required
    sh:property [
        rdfs:label "Fan Status" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:On_Off_Status ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1
    ] ;
    # required
    sh:property [
        rdfs:label "Fan Speed" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Speed_Command ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1
    ] ;
    # optional
    sh:property [
        rdfs:label "Fan Alarm" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Fault_Status ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1
    ] .

:variable-speed-fan a sh:NodeShape, owl:Class, bmotif:HVAC ;
    rdfs:label "Variable Speed Fan" ;
    sh:class brick:Cooling_Tower_Fan ;
    sh:property [
        sh:path brick:hasPart ;
        sh:qualifiedValueShape [ sh:node :variable-speed-fan-motor ] ;
        sh:qualifiedMinCount 1
    ] .

:ct-inlet-isolation-valve a sh:NodeShape, owl:Class, bmotif:HVAC ;
    rdfs:label "Cooling Tower Inlet Isolation Valve" ;
    sh:class brick:Isolation_Valve ;
    # applications
    sh:property [
        rdfs:label "CT inlet isolation valve" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Valve_Position_Command ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1
    ] ;
    # Retain the following two points for optional valve end switch status feedback. Delete otherwise.
    # optional
    sh:property [
        rdfs:label "CT inlet isolation valve closed end switch" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:On_Status ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1
    ] ;
    # optional
    sh:property [
        rdfs:label "CT inlet isolation valve open end switch" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Off_Status ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1
    ] .

:ct-outlet-isolation-valve a sh:NodeShape, owl:Class, bmotif:HVAC ;
    rdfs:label "Cooling Tower Outlet Isolation Valve" ;
    sh:class brick:Isolation_Valve ;
    # applications
    sh:property [
        rdfs:label "CT outlet isolation valve" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Valve_Position_Command ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1
    ] ;
    # Retain the following two points for optional valve end switch status feedback. Delete otherwise.
    # optional
    sh:property [
        rdfs:label "CT outlet isolation valve closed end switch" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:On_Status ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1
    ] ;
    # optional
    sh:property [
        rdfs:label "CT outlet isolation valve open end switch" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Off_Status ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1
    ] .

:ct-bypass-valve a sh:NodeShape, owl:Class, bmotif:HVAC ;
    rdfs:label "Cooling Tower Bypass Valve" ;
    sh:class brick:Bypass_Valve ;
    # applications
    sh:property [
        rdfs:label "CT bypass valve to cold water basin" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:On_Off_Command ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1
    ] .

:ct-basin-heater a sh:NodeShape, owl:Class, bmotif:HVAC ;
    rdfs:label "Cooling Tower Basin Heater" ;
    sh:class brick:Collection_Basin_Water_Heater ;
    # applications
    sh:property [
        rdfs:label "CT basin heater enable" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Heating_Enable_Command ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1
    ] ;
    # applications
    sh:property [
        rdfs:label "CT basin heater status" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Enable_Status ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1
    ] ;
    # applications
    sh:property [
        rdfs:label "CT basin temperature" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Collection_Basin_Water_Temperature_Sensor ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1
    ] .

# 4.10.7 Condenser Water Loop
# The following points apply for water-cooled plants. Delete otherwise.

:condenser-water-loop a sh:NodeShape, owl:Class, bmotif:HVAC ;
    rdfs:label "Condenser Water Loop" ;
    sh:class brick:Chilled_Water_Loop ;
    sh:property [
        sh:path brick:hasPart ;
        sh:qualifiedValueShape [
            sh:or (
                sh:node components:constant-speed-pump
                sh:node components:variable-speed-pump
            )
        ] ;
        sh:qualifiedMinCount 1
    ] ;
    # required, TODO see comment
    sh:property [
        rdfs:label "Common CW supply temperature from towers" ;
        rdfs:comment "If controlling cooling towers to maintain CWST (see 5.20.12.2), CWST sensor must be hardwired to the same controller as the cooling towers." ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Leaving_Condenser_Water_Temperature_Sensor ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1
    ] ;
    # required, TODO see comment
    sh:property [
        rdfs:label "Common CW return temperature to towers" ;
        rdfs:comment "If controlling cooling towers to maintain CWRT (as opposed to CWST, see 5.20.12.2), CWRT sensor must be hardwired to the same controller as the cooling towers." ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Entering_Condenser_Water_Temperature_Sensor ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1
    ] ;
    sh:property [
        sh:path brick:hasPart ;
        sh:qualifiedValueShape [
            sh:class brick:Makeup_Water_Valve ;
            # required
            sh:property [
                rdfs:label "Makeup water valve" ;
                sh:path brick:hasPoint ;
                sh:qualifiedValueShape [ sh:class brick:On_Off_Command ] ;
                sh:qualifiedMinCount 1 ;
                sh:qualifiedMaxCount 1
            ]
        ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1
    ] .

# 4.10.8 Waterside Economizer
# Retain the following points if the plant has a waterside economizer. Delete otherwise. “R” in this section should
# be interpreted as required for waterside economizer operation.

:chilled-water-loop-without-wse a sh:NodeShape, owl:Class, bmotif:HVAC ;
    rdfs:label "Condenser Water Loop without Waterside Economizer" ;
    sh:node :chilled-water-loop .

:wse-loop a sh:NodeShape, owl:Class, bmotif:HVAC ;
    rdfs:label "Waterside Economizer Loop" ;
    sh:class brick:Chilled_Water_Loop ;
    sh:property [
        rdfs:label "Waterside Economizer" ;
        sh:path brick:hasPart ;
        sh:qualifiedValueShape [
            sh:class brick:Heat_Exchanger ;
            sh:property [
                sh:path brick:isFedBy ;
                sh:qualifiedValueShape [ sh:node :cooling-tower ] ;
                sh:qualifiedMinCount 1
            ]
        ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1
    ] ;
    sh:property [
        sh:path brick:hasPart ;
        sh:qualifiedValueShape [ sh:node :wse-isolation-valve ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1
    ] ;
    # required
    sh:property [
        rdfs:label "WSE CW return temperature" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Leaving_Condenser_Water_Temperature_Sensor ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1
    ] ;
    # required, TODO check topology, does this point belong on a demand side loop?
    sh:property [
        rdfs:label "CHW return temperature before WSE" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Entering_Chilled_Water_Temperature_Sensor ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1
    ] ;
    # applications, NOTE is this implicitly required?
    sh:property [
        rdfs:label "CHW return temperature after WSE" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Leaving_Chilled_Water_Temperature_Sensor ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1
    ] ;
    sh:property [
        sh:path brick:hasPart ;
        sh:qualifiedValueShape [ sh:node :wse-bypass-valve ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1
    ] ;
    sh:property [
        sh:path brick:hasPart ;
        sh:qualifiedValueShape [
            sh:or (
                sh:node components:constant-speed-pump
                sh:node components:variable-speed-pump
            )
        ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1
    ] ;
    # required, TODO implicitly?
    sh:property [
        rdfs:label "WSE entering CHW temperature" ;
        rdfs:comment "Note: WSE entering CHW temperatures is located in the pipe entering the HX, not the CHWR main upstream of the WSE." ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Entering_Chilled_Water_Temperature_Sensor ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1
    ] .

:wse-isolation-valve a sh:NodeShape, owl:Class, bmotif:HVAC ;
    rdfs:label "Waterside Economizer Isolation Valve" ;
    sh:class brick:Condenser_Water_Isolation_Valve ;
    # required
    sh:property [
        rdfs:label "WSE HX CW isolation valve" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:On_Off_Command ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1
    ] ;
    # Retain the following two points for optional valve end switch status feedback.
    # optional
    sh:property [
        rdfs:label "WSE HX CW isolation valve closed end switch" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:On_Status ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1
    ] ;
    # optional
    sh:property [
        rdfs:label "WSE HX CW isolation valve open end switch" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:class brick:Off_Status ] ;
        sh:qualifiedMinCount 0 ;
        sh:qualifiedMaxCount 1
    ] .

:wse-bypass-valve a sh:NodeShape, owl:Class, bmotif:HVAC ;
    rdfs:label "WSE Bypass Valve" ;
    sh:class brick:Bypass_Valve ;
    # Retain the following two points if CHW flowrate through the heat exchanger is controlled by a modulating
    # bypass valve. Delete otherwise.
    # applications
    sh:property [
        rdfs:label "WSE CHW bypass valve" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:node brick:Valve_Position_Command ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1
    ] ;
    # applications
    sh:property [
        rdfs:label "WSE CHW differential pressure" ;
        sh:path brick:hasPoint ;
        sh:qualifiedValueShape [ sh:node brick:Differential_Pressure_Sensor ] ;
        sh:qualifiedMinCount 1 ;
        sh:qualifiedMaxCount 1
    ] .
